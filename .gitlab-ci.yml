stages:
  - build
  - deploy

variables:
  APP_NAME: icx-proxy
  DOCKER_HOST: tcp://10.23.1.240:2377
  DOCKER_DRIVER: overlay2
  SERVERIP: 10.23.1.240
  USERNAME: dustin
  DOCKER_REGISTRY: registry.origyn.ch

.common_methods_template: &common_methods_template
  before_script:
    - apt update > /dev/null
    - apt install -y openssh-client rsync curl gettext > /dev/null
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - echo "${origynwebdeploy}" | tr -d '\r' | ssh-add -
    - chmod 700 ~/.ssh
    - ssh-keyscan -H 10.23.1.240  > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - echo "${CI_REGISTRY_PASSWORD}" | ssh $USERNAME@$SERVERIP sudo docker login -u $CI_REGISTRY_USER --password-stdin $DOCKER_REGISTRY
  after_script:
    - ssh $USERNAME@$SERVERIP sudo docker logout $DOCKER_REGISTRY

.env_rules:
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" && $CI_PIPELINE_SOURCE == "push"
      variables:
        DYNAMIC_ENV: "develop"
        BRANCH: "develop"
        DOCKER_IMAGE_TAG: $CI_COMMIT_SHA
        PORT: 5001
        SERVICE: "icx-proxy-develop"
    - if: $CI_COMMIT_BRANCH == "develop" && $CI_PIPELINE_SOURCE == "push"
      variables:
        DYNAMIC_ENV: "prod"
        BRANCH: "master"
        DOCKER_IMAGE_TAG: $CI_COMMIT_SHA
        PORT: 5002
        SERVICE: "icx-proxy-prod"

build-push:
  extends: .env_rules
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/$DYNAMIC_ENV.Dockerfile
      --destination registry.origyn.ch/$APP_NAME-$DYNAMIC_ENV:$CI_COMMIT_SHA
  tags:
    - docker

deploy-service:
  extends: .env_rules
  stage: deploy
  image: ubuntu
  script:
    - envsubst '$DOCKER_REGISTRY $APP_NAME $DYNAMIC_ENV $DOCKER_IMAGE_TAG $CI_COMMIT_SHA $PORT' < docker-compose-deploy.yml | ssh $USERNAME@$SERVERIP "cd icx-proxy && cat > docker-compose.tmp"
    - ssh $USERNAME@$SERVERIP "cd icx-proxy && sudo docker stack deploy --compose-file docker-compose.tmp ${SERVICE}
  tags:
    - docker
