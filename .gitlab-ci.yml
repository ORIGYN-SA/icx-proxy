image: ubuntu:20.04

stages:
  - build
  - deploy

variables:
  APP_NAME: icx-proxy
  DOCKER_REGISTRY: registry.origyn.ch

.configure_docker: &configure_docker
  - apt-get update && apt-get install -y docker.io
  - echo "${CI_REGISTRY_PASSWORD}" | docker login -u $CI_REGISTRY_USER --password-stdin $DOCKER_REGISTRY

.env_rules:
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" && $CI_PIPELINE_SOURCE == "push"
      variables:
        DYNAMIC_ENV: "develop"
        BRANCH: "develop"
        DOCKER_IMAGE_TAG: $CI_COMMIT_SHA
        PORT: 5001
        SERVICE: "icx-proxy-develop"
    - if: $CI_COMMIT_BRANCH == "develop" && $CI_PIPELINE_SOURCE == "push"
      variables:
        DYNAMIC_ENV: "prod"
        BRANCH: "master"
        DOCKER_IMAGE_TAG: $CI_COMMIT_SHA
        PORT: 5002
        SERVICE: "icx-proxy-prod"

build-push:
  extends: .env_rules
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/$DYNAMIC_ENV.Dockerfile
      --destination registry.origyn.ch/$APP_NAME-$DYNAMIC_ENV:$CI_COMMIT_SHA
  tags:
    - docker

deploy-service:
  stage: deploy
  extends: .env_rules
  needs:
    - job: build-push
  when: on_success
  script:
    - *configure_docker
    - envsubst '$DOCKER_REGISTRY $APP_NAME $DYNAMIC_ENV $DOCKER_IMAGE_TAG $CI_COMMIT_SHA $PORT' < docker-compose-deploy.yml | cat > docker-compose.tmp
    - docker stack deploy --compose-file docker-compose.tmp ${SERVICE}
    - docker image prune -f
  tags:
    - docker
